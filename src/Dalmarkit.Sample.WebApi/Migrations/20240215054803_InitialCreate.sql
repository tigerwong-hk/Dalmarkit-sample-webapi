CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "ApiLogs" (
    "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
    "ActionName" text,
    "EventType" text NOT NULL,
    "ResponseStatusCode" integer NOT NULL,
    "Url" text NOT NULL,
    "UserIp" text,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "DurationMsec" integer NOT NULL,
    "LogDetail" jsonb NOT NULL,
    "ModifiedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "Status" boolean NOT NULL,
    "TraceId" text NOT NULL,
    "UserId" text,
    CONSTRAINT "PK_ApiLogs" PRIMARY KEY ("Id")
);

CREATE TABLE "AuditLogs" (
    "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
    "AuditScopeId" uuid NOT NULL,
    "Action" text NOT NULL,
    "ChangedValues" jsonb,
    "Error" text,
    "PrimaryKey" text NOT NULL,
    "Table" text NOT NULL,
    "CreatedOn" timestamp with time zone NOT NULL,
    "DurationMsec" integer NOT NULL,
    "LogDetail" jsonb NOT NULL,
    "ModifiedOn" timestamp with time zone NOT NULL,
    "Status" boolean NOT NULL,
    "TraceId" text NOT NULL,
    "UserId" text,
    CONSTRAINT "PK_AuditLogs" PRIMARY KEY ("Id")
);

CREATE TABLE "Entities" (
    "EntityId" uuid NOT NULL DEFAULT (gen_random_uuid()),
    "EntityName" text NOT NULL,
    "ClientId" text NOT NULL,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "CreateRequestId" text NOT NULL,
    "CreatorId" text NOT NULL,
    "IsDeleted" boolean NOT NULL,
    "ModifiedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "ModifierId" text NOT NULL,
    CONSTRAINT "PK_Entities" PRIMARY KEY ("EntityId")
);

CREATE TABLE "DependentEntities" (
    "DependentEntityId" uuid NOT NULL DEFAULT (gen_random_uuid()),
    "DependentEntityName" text NOT NULL,
    "EntityId" uuid NOT NULL,
    "ClientId" text NOT NULL,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "CreateRequestId" text NOT NULL,
    "CreatorId" text NOT NULL,
    "IsDeleted" boolean NOT NULL,
    "ModifiedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "ModifierId" text NOT NULL,
    "EntityHash" text NOT NULL,
    CONSTRAINT "PK_DependentEntities" PRIMARY KEY ("DependentEntityId"),
    CONSTRAINT "FK_DependentEntities_Entities_EntityId" FOREIGN KEY ("EntityId") REFERENCES "Entities" ("EntityId") ON DELETE CASCADE
);

CREATE TABLE "EntityImages" (
    "EntityImageId" uuid NOT NULL DEFAULT (gen_random_uuid()),
    "EntityId" uuid NOT NULL,
    "ClientId" text NOT NULL,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "CreateRequestId" text NOT NULL,
    "CreatorId" text NOT NULL,
    "IsDeleted" boolean NOT NULL,
    "ModifiedOn" timestamp with time zone NOT NULL DEFAULT (now() at time zone 'utc'),
    "ModifierId" text NOT NULL,
    "ObjectExtension" text NOT NULL,
    "ObjectName" text NOT NULL,
    CONSTRAINT "PK_EntityImages" PRIMARY KEY ("EntityImageId"),
    CONSTRAINT "FK_EntityImages_Entities_EntityId" FOREIGN KEY ("EntityId") REFERENCES "Entities" ("EntityId") ON DELETE CASCADE
);

CREATE INDEX "IX_ApiLogs_ActionName" ON "ApiLogs" ("ActionName");

CREATE INDEX "IX_ApiLogs_CreatedOn" ON "ApiLogs" ("CreatedOn");

CREATE INDEX "IX_ApiLogs_EventType" ON "ApiLogs" ("EventType");

CREATE INDEX "IX_ApiLogs_ModifiedOn" ON "ApiLogs" ("ModifiedOn");

CREATE INDEX "IX_ApiLogs_ResponseStatusCode" ON "ApiLogs" ("ResponseStatusCode");

CREATE INDEX "IX_ApiLogs_TraceId" ON "ApiLogs" ("TraceId");

CREATE INDEX "IX_ApiLogs_Url" ON "ApiLogs" ("Url");

CREATE INDEX "IX_ApiLogs_UserId" ON "ApiLogs" ("UserId");

CREATE INDEX "IX_ApiLogs_UserIp" ON "ApiLogs" ("UserIp");

CREATE INDEX "IX_DependentEntities_ClientId" ON "DependentEntities" ("ClientId");

CREATE UNIQUE INDEX "IX_DependentEntities_CreateRequestId_ClientId_EntityHash" ON "DependentEntities" ("CreateRequestId", "ClientId", "EntityHash");

CREATE INDEX "IX_DependentEntities_CreatedOn" ON "DependentEntities" ("CreatedOn");

CREATE INDEX "IX_DependentEntities_CreatorId" ON "DependentEntities" ("CreatorId");

CREATE UNIQUE INDEX "IX_DependentEntities_DependentEntityName_EntityId" ON "DependentEntities" ("DependentEntityName", "EntityId") WHERE "IsDeleted" = false;

CREATE INDEX "IX_DependentEntities_EntityId" ON "DependentEntities" ("EntityId");

CREATE INDEX "IX_DependentEntities_ModifiedOn" ON "DependentEntities" ("ModifiedOn");

CREATE INDEX "IX_DependentEntities_ModifierId" ON "DependentEntities" ("ModifierId");

CREATE INDEX "IX_Entities_ClientId" ON "Entities" ("ClientId");

CREATE UNIQUE INDEX "IX_Entities_CreateRequestId_ClientId" ON "Entities" ("CreateRequestId", "ClientId");

CREATE INDEX "IX_Entities_CreatedOn" ON "Entities" ("CreatedOn");

CREATE INDEX "IX_Entities_CreatorId" ON "Entities" ("CreatorId");

CREATE UNIQUE INDEX "IX_Entities_EntityName" ON "Entities" ("EntityName") WHERE "IsDeleted" = false;

CREATE INDEX "IX_Entities_ModifiedOn" ON "Entities" ("ModifiedOn");

CREATE INDEX "IX_Entities_ModifierId" ON "Entities" ("ModifierId");

CREATE INDEX "IX_EntityImages_ClientId" ON "EntityImages" ("ClientId");

CREATE UNIQUE INDEX "IX_EntityImages_CreateRequestId_ClientId" ON "EntityImages" ("CreateRequestId", "ClientId");

CREATE INDEX "IX_EntityImages_CreatedOn" ON "EntityImages" ("CreatedOn");

CREATE INDEX "IX_EntityImages_CreatorId" ON "EntityImages" ("CreatorId");

CREATE INDEX "IX_EntityImages_EntityId" ON "EntityImages" ("EntityId");

CREATE INDEX "IX_EntityImages_ModifiedOn" ON "EntityImages" ("ModifiedOn");

CREATE INDEX "IX_EntityImages_ModifierId" ON "EntityImages" ("ModifierId");

CREATE UNIQUE INDEX "IX_EntityImages_ObjectName_EntityId" ON "EntityImages" ("ObjectName", "EntityId") WHERE "IsDeleted" = false;

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240215054803_InitialCreate', '8.0.1');

COMMIT;

